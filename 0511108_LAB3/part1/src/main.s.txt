	.syntax unified
	.cpu cortex-m4
	.thumb
.data
	student_id: .word 511108 //TODO: put your student id here
.text
	.global main

	.equ RCC_AHB2ENR, 0x4002104C
	.equ GPIOA_MODER, 0x48000000
	.equ GPIOA_OTYPER, 0x48000004
	.equ GPIOA_OSPEEDR, 0x48000008
	.equ GPIOA_PUPDR, 0x4800000C
	.equ GPIOA_ODR, 0x48000014
	.equ DECODE_MODE, 0x09
	.equ SCAN_LIMIT, 0x0B
	.equ DISPLAY_TEST, 0x0F
	.equ SHUTDOWN, 0x0C
	.equ INTENSITY,0x0A
	.equ DATA, 0x20 //PA5
	.equ LOAD, 0x40 //PA6
	.equ CLOCK, 0x80 //PA7
	.equ LEN, 0x7
main:
	BL GPIO_init
	BL max7219_init
	BL ITOA
Program_end:
	B Program_end

GPIO_init:
    movs r0,#0x1
	ldr r1, =RCC_AHB2ENR
	str r0, [r1]

	movs r0,#0x5400
	ldr r1,=GPIOA_MODER
	ldr r2,[r1]
	and r2,#0xFFFF03FF
	orrs r2,r2,r0
	str r2,[r1]

	movs r0,#0xA800
	ldr r1,=GPIOA_OSPEEDR
	strh r0,[r1]
	ldr r3,=GPIOA_ODR

	BX LR


MAX7219Send:
	lsl r0, r0, #8
	add r0, r0, r1
	ldr r2, =#LOAD
	ldr r5, =#DATA
	ldr r4, =#CLOCK
	mov r7, #15//r7 = i
	mov r1, #0
	str r1,[r3]
max7219send_loop:

	mov r1, #1
	lsl r1, r7
	ands r1,r0
	cmp r1,#0
	beq low
	b high

low:
	movs r1,#0
	b cont
high:
	movs r1,r5

cont:
	orr r1,r4
	str r1,[r3]

	ands r1,r5
	str r1,[r3]

	subs r7, r7, #1
	bge max7219send_loop
	movs r1,r2
	orr r1,r4
	str r1, [r3]
	movs r1,#0
	str r1, [r3]
	BX LR


max7219_init:

	push {lr}
	ldr r0, =#DECODE_MODE
	ldr r1, =#0xFF			//Code B decode for digits 7-0
	BL MAX7219Send
	ldr r0, =#DISPLAY_TEST
	ldr r1, =#0x0
	BL MAX7219Send
	ldr r0, =#SCAN_LIMIT
	ldr r1, =0x6			//Display digits 0~6
	BL MAX7219Send
	ldr r0, =#INTENSITY
	ldr r1, =#0xA
	BL MAX7219Send
	ldr r0, =#SHUTDOWN
	ldr r1, =#0x1
	BL MAX7219Send
	pop {pc}


ITOA:
	push {lr}
	ldr r6,=student_id
	ldr r6,[r6]
	ldr r10,=#1000000	//Divisor
	mov r9,#10
	mov r11,#7			//Length of Digits,i

	ILOOP:

	mov r0,r11			//Display on Digits i
	mov r8,r6
	udiv r1,r8,r10		//ID/10^n,get the ith digit
	mul r8,r1,r10
	subs r6,r8			//number left
	BL MAX7219Send
	subs r11,#1			//i--
	udiv r10,r10,r9		//10^n/10
	bgt ILOOP
	pop {pc}
